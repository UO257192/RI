package uo.ri.business.transactionScripts.administrator;

import java.sql.Connection;
import java.sql.SQLException;

import alb.util.jdbc.Jdbc;
import uo.ri.business.dto.CourseDto;
import uo.ri.common.BusinessException;
import uo.ri.conf.Factory;
import uo.ri.persistance.training.CourseGateway;

public class UpdateCourse {

	private CourseDto dto;

	public UpdateCourse(CourseDto dto) {
		this.dto = dto;
	}
	
	public void execute() throws BusinessException {
		try (Connection c = Jdbc.getConnection()) {
			c.setAutoCommit(false);
			CourseGateway courseGateway = Factory.persistance.getCourseGateway();
			courseGateway.setConnection(c);
			if (courseGateway.findCourseByID(dto.id) == null) {
				c.rollback();
				throw new BusinessException("This course does not exist");
			}

			if (dto.startDate.after(dto.endDate)) {
				c.rollback();
				throw new BusinessException("Start Date is after End date");
			}

			if (dto.endDate.before(dto.startDate)) {
				c.rollback();
				throw new BusinessException("End Date is before Start Date");
			}

			courseGateway.update(dto);
			c.commit();
		} catch (SQLException e) {
			throw new RuntimeException("ERROR");
		}
	}

}
