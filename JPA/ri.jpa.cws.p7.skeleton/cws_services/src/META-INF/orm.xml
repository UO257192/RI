<?xml version="1.0" encoding="UTF-8"?>
<entity-mappings 
	xmlns="http://java.sun.com/xml/ns/persistence/orm" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  	xsi:schemaLocation="http://java.sun.com/xml/ns/persistence/orm http://java.sun.com/xml/ns/persistence/orm_2_0.xsd"
  	version="2.0">

	<!-- Vehicle queries --> 
	<named-query name="Vehicle.findByPlate">
		<query>select v from Vehicle v where v.plateNumber = ?1</query>
	</named-query>

	<!-- WorkOrder queries --> 
	<named-query name="WorkOrder.findByIds">
		<query>select a from WorkOrder a where a.id in ?1</query>
	</named-query>

	<!-- PaymentMean queries -->
	<named-query name="PaymentMean.findByInvoiceId">
		<query>
			select m 
			from Invoice f 
				join f.workOrders w 
				join w.vehicle.client c 
				join c.paymentMeans m 
			where f.id = ?1
		</query>
	</named-query>
	
	<!-- Mechanic queries -->
	<named-query name="Mechanic.findByDni">
		<query>
			select m 
			from Mechanic m 
			where m.dni = ?1
		</query>
	</named-query>

	<!-- Invoice queries -->
	<named-query name="Invoice.findByNumber">
		<query>select f from Invoice f where f.number = ?1</query>
	</named-query>
	
	<named-query name="Invoice.getNextInvoiceNumber">
		<query>select max(f.number) + 1 from Invoice f</query>
	</named-query>

	<!-- Certificate queries -->
	<named-query name="Certificate.findForMechanicVehicleType">
		<query>select c from Certificate c where c.mechanic = ?1 and c.vehicleType = ?2</query>
	</named-query>

	<!-- Course queries -->
	<named-query name="Course.findCourseHoursForCertificate">
		<query>
			select coalesce(sum((c.hours*e.attendance/100)*d.percentage/100),0)
			from Enrollment e, Course c, Dedication d
			where e.mechanic = ?1 and d.vehicleType = ?2 and e.passed = true and c = e.course and c = d.course
		</query>
	</named-query>

	<named-query name="Course.findByCode">
		<query>
			select c
			from Course c
			where c.code = ?1
		</query>
	</named-query>

	<named-query name="Enrollment.findAttendanceByCourseId">
		<query>select e from Enrollment e where e.course = ?1</query>
	</named-query>
<!--
	Use this format if your query has
	numeric comparisons as the one in this example

	<named-query name="findItemsOnSaleByCategoryId">
		<query>
			<![CDATA[
			select i
				from Item i join i.categories c
				where c.id = ?2
					and i.startDate <= ?1
					and i.endDate >= ?1
			]]>
		</query>
	</named-query>
 -->



</entity-mappings>